name: Build packages

on:
    push:
    pull_request:
    release:
        types:
            - published
            - prereleased

jobs:

    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
              os:
                - ubuntu20.04
                - ubuntu18.04
                - ubuntu16.04
                - debian10
                - debian9
                - centos8
                - centos7
                - centos6

        steps:
        - uses: actions/checkout@v1
        - name: build emqx packages
          env:
            ERL_OTP: erl23.2.7.2-emqx-2
            SYSTEM: ${{ matrix.os }}
          run: |
            docker run -i --name emqtt-$SYSTEM-build -v $(pwd):/emqtt emqx/build-env:$ERL_OTP-$SYSTEM /bin/bash -c "cd /emqtt && .github/workflows/script/build.sh"
            cd _packages && for var in $(ls); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        - uses: actions/upload-artifact@v1
          with:
            name: packages
            path: _packages/.

    build-on-mac:
        runs-on: macos-latest

        steps:
        - uses: actions/checkout@v1
        - name: prepare
          run: |
            brew install curl zip unzip gnu-sed erlang@23
            echo "/usr/local/opt/erlang@23/bin" >> $GITHUB_PATH
            echo "/usr/local/bin" >> $GITHUB_PATH
        - name: install rebar3
          run: |
            curl -Lo /usr/local/bin/rebar3 https://s3.amazonaws.com/rebar3/rebar3
            chmod +x /usr/local/bin/rebar3
        - name: build
          run: |
            .github/workflows/script/build.sh
            pkg=emqtt-macos-$(git describe --tags --always).zip
            openssl dgst -sha256 _packages/$pkg | awk '{print $2}' > _packages/$pkg.sha256
        - uses: actions/upload-artifact@v1
          with:
            name: packages-mac
            path: _packages/.

    release:
        runs-on: ubuntu-latest

        needs: [build, build-on-mac]

        steps:
        - uses: actions/checkout@v2
        - uses: actions/download-artifact@v1
          with:
            name: packages
            path: _packages
        - name: get packages
          run: |
            cd _packages && for var in $( ls |grep emqtt |grep -v sha256); do
              echo "$(cat $var.sha256) $var" | sha256sum -c || exit 1
            done
        - name: set aws
          if: github.event_name == 'release'
          run: |
            curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region us-west-2
        - name: upload aws
          if: github.event_name == 'release'
          run: |
            version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g")
            aws s3 cp --recursive ./_packages  s3://packages.emqx/emqtt/$version
            aws cloudfront create-invalidation --distribution-id E170YEULGLT8XB --paths "/emqtt/$version/*"
        - name: upload github
          if: github.event_name == 'release'
          run: |
            version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g")
            for var in $(ls _packages) ; do
                .github/workflows/script/upload_github_release_asset.sh owner=emqx repo=emqtt tag=$version filename=_packages/$var github_api_token=$(echo ${{ secrets.AccessToken }})
            done
