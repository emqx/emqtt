name: Build packages

on:
    push:
      branches:
        - "master"
    pull_request:
      branches:
        - "master"
    release:
        types:
            - published
            - prereleased

jobs:

    linux:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
              builder:
                - 5.5-0:1.15.7-26.2.5.2-3
                - 5.5-2:1.18.3-27.2-3
              os:
                - ubuntu20.04
                - ubuntu22.04
                - ubuntu24.04
                - debian11
                - debian12
                - el9
                - amzn2
                - amzn2023

        steps:
        - name: init variables
          env:
            BUILDER: ${{ matrix.builder }}
          run: |
            ELIXIR_OTP="${BUILDER##*:}"
            echo "ELIXIR=${ELIXIR_OTP%%-*}" >> $GITHUB_ENV
            echo "OTP=${ELIXIR_OTP#*-}" >> $GITHUB_ENV
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
          with:
            fetch-depth: 0
        - name: build emqx packages
          env:
            BUILDER_IMAGE: "ghcr.io/emqx/emqx-builder/${{ matrix.builder }}-${{ matrix.os }}"
          # NOTE
          # Doing it manually instead of just setting `container` for the job because of
          # discrepancies in the images' environments affecting even basic things like
          # repo checkouts.
          run: |
            docker run --rm --name emqtt-${{ matrix.os }}-build -v $(pwd):/emqtt --workdir /emqtt ${BUILDER_IMAGE} /bin/bash -c '
              git config --global --add safe.directory "${PWD}"
              .github/workflows/script/build.sh
            '
            sudo bash -c '
              cd _packages
              for var in $(ls); do echo $(sha256sum $var | awk "{print $1}") > $var.sha256; done
            '
        - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
          if: ${{ github.event_name == 'release' }}
          with:
            name: "emqtt-${{ matrix.os }}-otp${{ env.OTP }}-elixir${{ env.ELIXIR }}"
            path: _packages/*

    macos:
        runs-on: macos-latest

        strategy:
          fail-fast: false
          matrix:
            otp:
              - 26
              - 27
            rebar3:
              - '3.23.0'

        steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        - name: prepare
          run: |
            # See https://github.com/actions/setup-python/issues/577
            # brew update
            brew install curl zip unzip gnu-sed erlang@${{ matrix.otp }} coreutils
            echo "$(brew --prefix)/opt/erlang@${{ matrix.otp }}/bin" >> $GITHUB_PATH
            echo "$(brew --prefix)/opt/unzip/bin" >> $GITHUB_PATH
            echo "$(brew --prefix)/bin" >> $GITHUB_PATH
            wget https://github.com/erlang/rebar3/releases/download/${{ matrix.rebar3 }}/rebar3
            sudo mv rebar3 /usr/local/bin/ && sudo chmod +x /usr/local/bin/rebar3
        - name: build
          run: |
            echo "${PATH}"
            erl -noshell -eval 'io:format(erlang:system_info(otp_release)), halt(0).'
            .github/workflows/script/build.sh
            pkg=emqtt-macos-$(git describe --tags --always).zip
            openssl dgst -sha256 _packages/$pkg | awk '{print $2}' > _packages/$pkg.sha256
        - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
          if: ${{ github.event_name == 'release' }}
          with:
            name: "emqtt-macos-otp${{ matrix.otp }}"
            path: _packages/*

    release:
        runs-on: ubuntu-latest

        needs:
          - linux
          - macos
        if: ${{ github.event_name == 'release' }}

        steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
          with:
            pattern: "emqtt-*"
            path: _packages
            merge-multiple: true
        - name: set aws
          uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
          with:
            aws-access-key-id: ${{ secrets.AwsAccessKeyId }}
            aws-secret-access-key: ${{ secrets.AwsSecretAccessKey }}
            aws-region: us-west-2
        - name: verify packages
          working-directory: _packages
          run: |
            for var in $(ls | grep emqtt | grep -v sha256); do
              echo "$(cat $var.sha256) $var" | sha256sum -c || exit 1
            done
        - name: upload aws
          run: |
            version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g")
            aws s3 cp --recursive ./_packages  s3://packages.emqx.io/emqtt/$version
            aws cloudfront create-invalidation --distribution-id E3TYD0WSP4S14P --paths "/emqtt/$version/*"
        - name: upload github
          uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
          with:
            files: "_packages/*"
